{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/test/test.component.css","webpack:///./src/app/test/test.component.html","webpack:///./src/app/test/test.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AAEc;AACD;AAItD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;IAC/C,EAAE,IAAI,EAAE,2BAA2B,EAAE,SAAS,EAAE,kEAAa,EAAE;CAChE,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AChB7B,mB;;;;;;;;;;;ACAA,mFAAmF,WAAW,6U;;;;;;;;;;;;;;;;;;;;;;;;;ACAtC;AACnB;AASrC;IAQE,sBAAoB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;QAN/B,UAAK,GAAe,EAAE,CAAC;QACvB,YAAO,GAAiB,EAAE,CAAC;QAC3B,iBAAY,GAAmB,EAAE,CAAC;IAMlC,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,gBAAM;YAE5C,QAAQ,CAAC;YACT,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;YAC3B,QAAQ,CAAC;YACT,GAAG,CAAC,CAAa,UAAU,EAAV,UAAI,CAAC,KAAK,EAAV,cAAU,EAAV,IAAU;gBAAtB,IAAI,IAAI;gBACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACtB;QACD,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,iCAAU,GAAV;QAAA,iBAUC;QATC,QAAQ,CAAC;QACT,oDAAoD;QACpD,IAAM,GAAG,GAAG,iBAAe,IAAI,CAAC,QAAU,CAAC;QAC3C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,gBAAM;YAClC,QAAQ,CAAC;YACT,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;YAC7B,QAAQ,CAAC;QACT,CAAC,CACF,CAAC;IACJ,CAAC;IAED,oCAAa,GAAb;QAAA,iBAOC;QANC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,gBAAM;YAC/C,QAAQ,CAAC;YACT,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;YAClC,QAAQ,CAAC;YACT,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IA7CU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAS2B,kDAAI;OARpB,YAAY,CAiDxB;IAAD,mBAAC;CAAA;AAjDwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AACI;AACF;AAEI;AACO;AACG;AAiBzD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAdrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,wDAAU;gBACV,oEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACxBtB,mB;;;;;;;;;;;ACAA,sFAAsF,WAAW,iB;;;;;;;;;;;;;;;;;;;;;;;;ACAxC;AAQzD;IAAA;IAMA,CAAC;IAHC,gCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAJQ;QAAR,2DAAK,EAAE;;kDAAqB;IADlB,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,aAAa,CAMzB;IAAD,oBAAC;CAAA;AANyB;;;;;;;;;;;;;;ACR1B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TestComponent } from './test/test.component';\nimport { AppComponent } from './app.component';\r\n\n\nconst routes: Routes = [\r\n  { path: '', redirectTo: '', pathMatch: 'full' },\r\n  { path: 'api/[controller]/[action]', component: TestComponent },\r\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<h1>My text</h1>\\n\\n<ul>\\n  <li *ngFor=\\\"let result of cards\\\">{{result.id}}</li>\\n</ul>\\n\\n<app-test [players]=\\\"players\\\"></app-test>\\n\\n\\n<button (click)=\\\"handOverCards()\\\">HAND OVER CARDS</button>\\n\\n\\n\\n<input [(ngModel)]=\\\"botCount\\\">\\n<button (click)=\\\"getPlayers()\\\">Start new game (CREATE NEW PLAYERS)</button>\\n<!--<button (click)=\\\"getPlayers()\\\">Start new game (CREATE NEW PLAYERS)</button>-->\\n\"","import { Component, OnInit,Input } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { debug } from 'util';\r\n\r\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  cards: CardData[] = [];\n  players: PlayerData[] = [];\n  playersCards: PlayersCards[] = [];\n  botCount: number;\n  \n\n  constructor(private _http: Http) {\n\r\n  }\n\n  ngOnInit() {\n    this._http.get(\"/api/values\").subscribe(result=>\r\n    {\r\n      debugger;\r\n      this.cards = result.json();\r\n      debugger;\r\n      for (let item of this.cards) {\r\n        console.log(item.id);\r\n      }\r\n      }\r\n    );\r\n  }\n\n\n  getPlayers() {\n    debugger;\n    //var ele = document.getElementById(\"input-player\");\n    const url = `/api/values/${this.botCount}`;\n    this._http.get(url).subscribe(result => {\r\n      debugger;\r\n      this.players = result.json();\r\n      debugger;\r\n      }\r\n    );\r\n  }\n\n  handOverCards() {\n    this._http.get(\"/api/gameLogic\").subscribe(result => {\r\n      debugger;\r\n      this.playersCards = result.json();\n      debugger;\n      console.log(this.playersCards.length);\n    });\n  }\n\n\n\n}\n\nexport interface CardData {\n  id: number;\n  value: number;\n  suit: string;\n  rank: string;\r\n}\n\nexport interface PlayerData {\n  id: number;\n  name: string;\n  playerType: string;\r\n  score: number;\r\n}\n\nexport interface PlayersCards {\n  player: PlayerData;\r\n  cardsList: CardData[];\r\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { TestComponent } from './test/test.component';\nimport { AppRoutingModule } from './/app-routing.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    AppRoutingModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>Test</p>\\r\\n\\r\\n<ul>\\r\\n  <li *ngFor=\\\"let result of players\\\">{{result.id}}</li>\\r\\n</ul>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n  @Input() players: PlayerData;\n\n  ngOnInit() {\n    console.log(this.players);\r\n  }\n}\n\nexport interface PlayerData {\n  id: number;\n  name: string;\n  playerType: string;\r\n  score: number;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}